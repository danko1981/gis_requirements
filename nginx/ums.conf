# Reverse proxy on https port (SSL Offloading on load balancer not required)
	server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  				ums-ha-test.uniquefire.cloud;
        ssl_certificate 		   	"/etc/nginx/ssl/server.crt";
        ssl_certificate_key 	   	"/etc/nginx/ssl/server.key";
	ssl_session_timeout       	1d;
        ssl_protocols             	TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers  	off;
        ssl_ciphers               	ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache         	shared:SSL:10m;
        ssl_session_tickets       	off;
        ssl_stapling              	off;
		add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
	
		location / {
			# Proxy requests to your backend server	
			# fastcgi_buffering 			off;	
			proxy_buffer_size          	256k;
			proxy_buffers              	32 256k;
			proxy_pass 					http://localhost:32443/;
			#limit_req  				zone=one burst=10 nodelay;
		}
		
	}

# Reverse proxy on http port (SSL Offloading on load balancer required)
	server {
		listen 80;
		server_name ums-ha-test.uniquefire.cloud;
		add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
		location / {
			# Proxy requests to your backend server	
			# fastcgi_buffering 			off;	
			proxy_buffer_size          	256k;
			proxy_buffers              	32 256k;
			proxy_pass 					http://localhost:32443/;
			#limit_req  				zone=one burst=10 nodelay;
		}
	}
